///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Output.hpp"
#include "Errors/OutOfRangePinException.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace nts::Specials
///////////////////////////////////////////////////////////////////////////////
namespace nts::Specials
{

///////////////////////////////////////////////////////////////////////////////
Output::Output(const std::string& name)
    : AComponent(name, 1)
{
    m_pins[0] = Pin(Pin::Type::INPUT);
}

///////////////////////////////////////////////////////////////////////////////
void Output::simulate(size_t tick)
{
    if (m_tick == tick) return;
    m_tick = tick;
    this->compute(0);
}

///////////////////////////////////////////////////////////////////////////////
Tristate Output::compute(size_t pin)
{
    if (pin >= m_pins.size())
        throw OutOfRangePinException();
    return (this->getInputState(0));
}

} // namespace nts::Specials

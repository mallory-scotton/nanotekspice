///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Input.hpp"
#include "Errors/OutOfRangePinException.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace nts::Specials
///////////////////////////////////////////////////////////////////////////////
namespace nts::Specials
{

///////////////////////////////////////////////////////////////////////////////
Input::Input(const std::string& name)
    : AComponent(name, 1)
{
    m_pins[0] = Pin(Pin::Type::OUTPUT);
}

///////////////////////////////////////////////////////////////////////////////
void Input::setValue(Tristate value)
{
    m_pins[0].setState(value);
}

///////////////////////////////////////////////////////////////////////////////
Tristate Input::compute(size_t pin)
{
    if (pin >= m_pins.size())
        throw OutOfRangePinException();
    return (m_pins[0].getState());
}

} // namespace nts::Specials

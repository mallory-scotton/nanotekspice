///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Circuit.hpp"
#include <string>

///////////////////////////////////////////////////////////////////////////////
// Namespace nts
///////////////////////////////////////////////////////////////////////////////
namespace nts
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Parser
{
    private:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param circuit
    /// \param line
    ///
    ///////////////////////////////////////////////////////////////////////////
    static void parseChipset(Circuit& circuit, const std::string& line);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param circuit
    /// \param line
    ///
    ///////////////////////////////////////////////////////////////////////////
    static void parseLink(Circuit& circuit, const std::string& line);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param circuit
    /// \param filename
    ///
    ///////////////////////////////////////////////////////////////////////////
    static void parseCircuit(Circuit& circuit, const std::string& filename);
};

} // namespace nts
